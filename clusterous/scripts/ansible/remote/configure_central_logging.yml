---
- name: provision central logging instance
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: provisioning central logging
      local_action:
        module: ec2
        aws_access_key: "{{ AWS_KEY }}"
        aws_secret_key: "{{ AWS_SECRET }}"
        region: "{{ region }}"
        key_name: "{{ keypair }}"
        instance_type: "{{ central_logging_instance_type }}"
        image: "{{ central_logging_ami_id }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        wait: yes
        group: "{{ security_group_name }}"
        instance_tags:
          Name: "{{ central_logging_instance_name }}"
        exact_count: 1
        count_tag:
          Name: "{{ central_logging_instance_name }}"
        volumes:
          - device_name: /dev/sda1
            volume_size: 20
            delete_on_termination: true
      register: ec2

    - name: add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname={{ central_logging_instance_name }}
      with_items: ec2.instances

    - name: Wait for ssh to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

- name: configure central logging
  hosts: "{{ central_logging_instance_name }}"
  user: root
  sudo: True
  tasks:
    # HOSTNAMES
    - name: add entry to hosts file
      lineinfile: dest=/etc/hosts line="127.0.0.1 central_logging"

    # ELASTICSEARCH
    - name: check if elasticsearch is running
      shell: curl -I http://central_logging:9200/
      register: result
      ignore_errors: True
    - name: elasticsearch start
      shell: "nohup /usr/share/elasticsearch/bin/elasticsearch &"
      when: result|failed

    # KIBANA
    - name: check if kibana is running
      shell: curl -I http://central_logging:5601/
      register: result
      ignore_errors: True
    - name: kibana start
      shell: service kibana start
      when: result|failed

    # NGINX
    - name: check if nginx is running
      shell: curl -I http://central_logging:8081/
      register: result
      ignore_errors: True
    - name: nginx start
      service: name=nginx state=started enabled=yes
      when: result|failed

    # LOGSTASH
    - name: check if logstash is running
      shell: netstat -aln |grep 5514|grep LISTEN
      register: result
      ignore_errors: True
    - name: logstash start
      shell: "nohup /etc/init.d/logstash start&"
      when: result.stdout.find('5514') == -1
