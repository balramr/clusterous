# Copyright 2015 Nicta
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Launch node instance from base AMI
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vars/global_vars.yml
  vars:
    instance_type: t2.micro
  tasks:
    - name: EC2 provisioning
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: "{{ keypair }}"
        instance_type: "{{ instance_type }}"
        image: "{{ base_image }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: true
        wait: yes
        group: "{{ security_group_name }}"
        instance_tags:
          Name: "{{ instance_name_node }}"
          group: node
          Billing: "{{ billing_tag }}"
        exact_count: 1
        count_tag:
          Name: "{{ instance_name_node }}"
          group: node
      register: ec2

    - name: Add instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances

    - name: Wait for ssh to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

# Install and configure instance
- hosts: launched
  user: ubuntu
  become: yes
  vars_files:
    - vars/global_vars.yml
  roles:
    - roles/mesos_slave
    - roles/docker

# Stop here if do_not_bake is set
- hosts: localhost
  tasks:
    - name: fail
      fail: msg="Not baking as do_not_bake is true. Terminate instance manually"
      when: do_not_bake

# Bake AMI
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vars/global_vars.yml
  tasks:
    - include: tasks_bake_instance.yml ami_name="{{ ami_node }}"

# Stop here if terminate_instance is false
- hosts: localhost
  tasks:
    - name: fail
      fail: msg="Not terminating instance as terminate_instance is false. You need to terminate it manually"
      when: not terminate_instance

- hosts: localhost
  connection: local
  vars_files:
    - vars/global_vars.yml  
  tasks:
    - name: Terminate instance
      ec2:
        state: 'absent'
        instance_ids: "{{ ec2.instance_ids }}"
        region: "{{ region }}"

